🧩 What is the name of your project?
Tetr-i/o-s

📝 Briefly describe your project
We are developing a Tetris-inspired game using an event-driven architecture with four different I/O devices. The core gameplay mimics the original Tetris mechanics, including rotating, moving, and dropping pieces onto a grid to complete lines. The game will feature additional input flexibility by supporting mouse buttons for complementary actions, such as rotation or hard drop, enhancing the user experience. The visual output will be handled through a graphical mode for a smoother and more intuitive interface.

🎮 List the I/O devices you are planning on using and briefly describe why you need them.
Timer: Used to control the automatic descent of the current piece at fixed intervals, simulating the game's natural pace and increasing difficulty over time.

Keyboard: Main control device used to move the active piece left/right, rotate it, or drop it instantly to the bottom of the grid.

Mouse: Used for secondary actions — left and right clicks will rotate the piece in different directions, and the middle click will instantly drop the piece (hard drop). May also be used for interacting with menus.

Graphics: Required to render the game visually using pixel-based drawing, including the grid, the falling pieces, score display, and possible UI elements like start and game over screens.

